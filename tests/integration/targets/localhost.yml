---
- name: prepare nextcloud container
  hosts: localhost
  connection: local

  tasks:
    - name: start nextcloud container
      community.docker.docker_container:
        name: nextcloudintergrationtest
        image: "nextcloud:{{ nextcloud_version | default('24-apache') }}"
        state: started
        auto_remove: yes
        recreate: yes
        container_default_behavior: no_defaults
        published_ports:
          - 127.0.0.1:80:80
          - 127.0.0.1:443:443
        env:
          SQLITE_DATABASE: sqlite
          NEXTCLOUD_ADMIN_USER: ansible
          NEXTCLOUD_ADMIN_PASSWORD: nextcloud_collection
          NEXTCLOUD_TRUSTED_DOMAINS: localhost

    - name: add nextcloud container temporary host group testing
      add_host: hostname=nextcloudintergrationtest groups=testing

    - name: bootstrap - update package cache
      command: docker exec nextcloudintergrationtest apt update

    - name: bootstrap - install python3
      command: docker exec nextcloudintergrationtest apt install python3 ssl-cert -y


- name: prepare apache with https
  hosts: testing
  connection: docker

  vars:
    ansible_user: root
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: Enable the Apache2 module ssl
      community.general.apache2_module:
        state: present
        name: ssl

    - name: enable default-ssl
      command: a2ensite default-ssl

    - name: reload apache2
      service:
        name: apache2
        state: reloaded


- name: prepare nextcloud itself
  hosts: testing
  connection: docker

  vars:
    ansible_user: www-data
    ansible_python_interpreter: /usr/bin/python3

  tasks:
    - name: install passwords app
      command: php occ app:install passwords


- name: run integration tests
  hosts: localhost
  connection: local

  vars:
    NEXTCLOUD_HOST: localhost
    NEXTCLOUD_USER: ansible
    NEXTCLOUD_TOKEN: nextcloud_collection
    SSL_MODE: skip

  module_defaults:
    markuman.nextcloud.file:
      host: "{{ NEXTCLOUD_HOST }}"
      user: "{{ NEXTCLOUD_USER }}"
      api_token: "{{ NEXTCLOUD_TOKEN }}"
      ssl_mode: "{{ SSL_MODE }}"
    markuman.nextcloud.file_info:
      host: "{{ NEXTCLOUD_HOST }}"
      user: "{{ NEXTCLOUD_USER }}"
      api_token: "{{ NEXTCLOUD_TOKEN }}"
      ssl_mode: "{{ SSL_MODE }}"
    markuman.nextcloud.password:
      host: "{{ NEXTCLOUD_HOST }}"
      user: "{{ NEXTCLOUD_USER }}"
      api_token: "{{ NEXTCLOUD_TOKEN }}"
      ssl_mode: "{{ SSL_MODE }}"
    markuman.nextcloud.password_info:
      host: "{{ NEXTCLOUD_HOST }}"
      user: "{{ NEXTCLOUD_USER }}"
      api_token: "{{ NEXTCLOUD_TOKEN }}"
      ssl_mode: "{{ SSL_MODE }}"
    markuman.nextcloud.user_info:
      host: "{{ NEXTCLOUD_HOST }}"
      user: "{{ NEXTCLOUD_USER }}"
      api_token: "{{ NEXTCLOUD_TOKEN }}"
      ssl_mode: "{{ SSL_MODE }}"
    markuman.nextcloud.info:
      host: "{{ NEXTCLOUD_HOST }}"
      user: "{{ NEXTCLOUD_USER }}"
      api_token: "{{ NEXTCLOUD_TOKEN }}"
      ssl_mode: "{{ SSL_MODE }}"

  tasks:
    - name: integration tests
      block:
        - name: file integration test
          include_role:
            name: info

        - name: file integration test
          include_role:
            name: user

        - name: file integration test
          include_role:
            name: file

        - name: passwords integration test
          include_role:
            name: passwords

      always:
        - name: stop nextcloud container
          community.docker.docker_container:
            name: nextcloudintergrationtest
            state: stopped
            container_default_behavior: no_defaults